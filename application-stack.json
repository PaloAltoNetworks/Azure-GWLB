{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "securityResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "security-stack resource group"
        }
      },  
      "gwLBName": {
        "type": "string",
        "defaultValue": "securityLB",
        "metadata": {
          "description": " Name of the Gateway Loadbalancer in security-stack"
        }
      },  
      "gwLBFrontendIPName": {
        "type": "string",
        "defaultValue": "FEIpconfig1",
        "metadata": {
          "description": "Name of your Gateway Loadbalancer Frontend Private IP"
        }
      },
      "adminUsername": {
        "type": "string",
        "allowedValues": [
           "ubuntu"
        ],  
        "defaultValue": "ubuntu",
        "metadata": {
          "description": "Admin username of os profile."
        }
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Admin password of os profile"
        }
      },
      "imagePublisher": {
        "type": "string",
        "defaultValue": "Canonical",
        "metadata": {
          "description": "Image Publisher"
        }
      },
      "imageOffer": {
        "type": "string",
        "defaultValue": "UbuntuServer",
        "metadata": {
          "description": "Image Offer"
        }
      },
      "imageSKU": {
        "type": "string",
        "defaultValue": "18.04-LTS",
        "metadata": {
          "description": "Image SKU"
        }
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_A1_v2",
        "metadata": {
          "description": "Size of the application VM"
        }
      },
      "VNETName": {
        "type": "string",
        "defaultValue": "appVNET",
        "metadata": {
          "description": "Name of the application virtual network"
        }
      },
      "SubnetName": {
        "type": "string",
        "defaultValue": "Subnet-app",
        "metadata": {
          "description": "Name of the application subnet"
        }
      },
      "VNETPrefix": {
        "type": "string",
        "defaultValue": "10.240.0.0/16",
        "metadata": {
          "description": "Enter your Application VNET CIDR"
        }
      },
      "SubnetPrefix": {
        "type": "string",
        "defaultValue": "10.240.0.0/24",
        "metadata": {
          "description": "Enter your Application subnet prefix"
        }
      }
    },
    "variables": {
      "networkSecurityGroupName": "networkSecurityGroup1",
      "spokeLBName": "publicLB",
      "appVmName": "applicationVM",
      "appPublicIPAddressName": "appPip",
      "appVNetName": "[parameters('VNETName')]",
      "appSubnetName": "[parameters('SubnetName')]",
      "appVMNicName": "appNic",
      "appSubnetPrefix": "[parameters('SubnetPrefix')]",
      "appAddressPrefix": "[parameters('VNETPrefix')]",
      "publicIPAddressType": "Static",
      "appVNetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('appVNetName'))]",
      "appSubnetRef": "[concat(variables('appVNetID'),'/subnets/',variables('appSubnetName'))]",
      "spokeLBID": "[resourceId('Microsoft.Network/loadBalancers',variables('spokeLBName'))]",
      "SubscriptionsID": "[subscription().subscriptionId]",
      "storageAccountDomain": "core.windows.net"
    },
    "resources": [
      {
        "apiVersion": "2016-03-30",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "[variables('networkSecurityGroupName')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "unblock_all_tcp_rule",
              "properties": {
                "description": "unblock_all_tcp_rule",
                "protocol": "Tcp",
                "sourcePortRange": "0-65535",
                "destinationPortRange": "0-65535",
                "sourceAddressPrefix": "0.0.0.0/0",
                "destinationAddressPrefix": "0.0.0.0/0",
                "access": "Allow",
                "priority": 123,
                "direction": "Inbound"
              }
            },
            {
              "name": "unblock_all_tcp_outrule",
              "properties": {
                "description": "unblock_all_tcp_outrule",
                "protocol": "Tcp",
                "sourcePortRange": "0-65535",
                "destinationPortRange": "0-65535",
                "sourceAddressPrefix": "0.0.0.0/0",
                "destinationAddressPrefix": "0.0.0.0/0",
                "access": "Allow",
                "priority": 123,
                "direction": "Outbound"
              }
            },
            {
              "name": "unblock_all_udp_ports",
              "properties": {
                "description": "Unblock_all_udp_ports",
                "protocol": "Udp",
                "sourcePortRange": "0-65535",
                "destinationPortRange": "0-65535",
                "sourceAddressPrefix": "0.0.0.0/0",
                "destinationAddressPrefix": "0.0.0.0/0",
                "access": "Allow",
                "priority": 125,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2017-08-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('appPublicIPAddressName')]",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Standard"
        },
        "properties": {
          "publicIPAddressVersion": "IPv4",
          "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
        }
      },
      {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('appVMNicName')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Network/virtualNetworks/', variables('appVNetName'))]",
          "[concat('Microsoft.Network/loadBalancers/', variables('spokeLBName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('appSubnetRef')]"
                },
                "loadBalancerProbeStatus": "Up",
                "loadBalancerBackendAddressPools": [
                  {
                    "id": "[concat(variables('spokeLBID'), '/backendAddressPools/BackendPool1')]"
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[variables('appVNetName')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
        ],
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('appAddressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('appSubnetName')]",
              "properties": {
                "addressPrefix": "[variables('appSubnetPrefix')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[variables('appVmName')]",
        "apiVersion": "2016-04-30-preview",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkInterfaces', variables('appVMNicName'))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "osProfile": {
            "computerName": "[variables('appVmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[parameters('imagePublisher')]",
              "offer": "[parameters('imageOffer')]",
              "sku": "[parameters('imageSKU')]",
              "version": "latest"
            },
            "osDisk": {
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('appVMNicName'))]",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      },
      {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('appVmName'),'/newuserscript')]",
      "apiVersion": "2021-07-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/', variables('appVmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "commandToExecute": "echo '<html><head><title>Go PaloAlto Networks - Azure GWLB works!</title></head><body>Welcome to PaloAlto Networks</body></html>' >> /home/ubuntu/index.html && python -m SimpleHTTPServer 8080 &"
        }
      }
    },
      {
        "apiVersion": "2020-08-01",
        "name": "[variables('spokeLBName')]",
        "type": "Microsoft.Network/loadBalancers",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Standard"
        },
        "dependsOn": [
          "[concat('Microsoft.Network/publicIPAddresses/', variables('appPublicIPAddressName'))]"
        ],
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "LoadBalancerFrontEnd",
              "properties": {
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('appPublicIPAddressName'))]"
                },
                "privateIPAddressVersion": "IPv4",
                "gatewayLoadBalancer": {
                  "id": "[concat('/subscriptions/',variables('SubscriptionsID'),'/resourceGroups/',parameters('securityResourceGroup'),'/providers/Microsoft.Network/loadBalancers/',parameters('gwLBName'),'/frontendIPConfigurations/',parameters('gwLBFrontendIPName'),'')]"
                }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "BackendPool1"
            }
          ],
          "probes": [
            {
              "name": "spoke_http_health_probe",
              "properties": {
                  "protocol": "Tcp",
                  "port": 8080,
                  "intervalInSeconds": 5,
                  "numberOfProbes": 2
              }
            }
          ],
          "loadBalancingRules": [
            {
              "name": "LBRule",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[concat(variables('spokeLBID'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                },
                "backendAddressPool": {
                  "id": "[concat(variables('spokeLBID'),'/backendAddressPools/BackendPool1')]"
                },
                "probe": {
                  "id": "[concat(variables('spokeLBID'),'/probes/spoke_http_health_probe')]"
                },
                "protocol": "Tcp",
                "enableTcpReset": true,
                "frontendPort": 8081,
                "backendPort": 8080,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5
              }

            }
          ]
        }
      }
    ]
  }